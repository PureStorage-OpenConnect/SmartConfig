from pure_dir.infra.logging.logmanager import loginfo
from pure_dir.components.common import get_device_list
from pure_dir.services.apps.pdt.core.tasks.main.ucs.common import *
from pure_dir.services.apps.pdt.core.orchestration.orchestration_helper import parseTaskResult
from pure_dir.services.apps.pdt.core.orchestration.orchestration_data_structures import *

metadata = dict(
    task_id="UCSCreateServerBIOSPolicy",
    task_name="Create Server BIOS Policy",
    task_desc="Create Server BIOS Policy",
    task_type="UCSM"
)


class UCSCreateServerBIOSPolicyForAIMLHosts:
    def __init__(self):
        pass

    def execute(self, taskinfo, logfile):
        loginfo("Create Server BIOS Policy")
        res = get_ucs_handle(taskinfo['inputs']['fabric_id'])

        if res.getStatus() != PTK_OKAY:
            return parseTaskResult(res)
        obj = res.getResult()

        res = obj.ucsCreateServerBIOSPolicyForAIMLHosts(
            taskinfo['inputs'], logfile)

        obj.release_ucs_handle()
        return parseTaskResult(res)

    def rollback(self, inputs, outputs, logfile):
        loginfo("RollBack: Delete Server BIOS Policy")
        res = get_ucs_handle(inputs['fabric_id'])
        if res.getStatus() != PTK_OKAY:
            return res
        obj = res.getResult()

        res = obj.ucsDeleteServerBIOSPolicy(
            inputs, outputs, logfile)
        obj.release_ucs_handle()
        return res

    def getfilist(self, keys):
        res = result()
        ucs_list = get_device_list(device_type="UCSM")
        res.setResult(ucs_list, PTK_OKAY, _("PDT_SUCCESS_MSG"))
        return res


class UCSCreateServerBIOSPolicyForAIMLHostsInputs:
    fabric_id = Dropdown(
        hidden='True',
        isbasic='True',
        helptext='',
        dt_type="string",
        static="False",
        api="getfilist()",
        name="fabric_id",
        label="UCS Fabric Name",
        static_values="",
        svalue="",
        mapval="",
        mandatory="1",
        order=1)
    name = Textbox(
        validation_criteria='str|min:1|max:128',
        hidden='False',
        isbasic='True',
        helptext='Server BIOS Policy',
        api="",
        dt_type="string",
        label="Name",
        mapval="0",
        name="name",
        static="False",
        svalue="AI-ML-Hosts",
        mandatory='1',
        static_values="",
        order=2)
    descr = Textbox(
        validation_criteria='str|min:1|max:128',
        hidden='False',
        isbasic='True',
        helptext='',
        api="",
        dt_type="string",
        label="Description",
        mapval="0",
        name="descr",
        static="False",
        svalue="Server BIOS Policy",
        mandatory='1',
        static_values="",
        order=3)
    reboot = Checkbox(
        hidden='False',
        isbasic='True',
        helptext='Reboot on BIOS setting change',
        api="",
        dt_type="string",
        label="Reboot on BIOS settings change",
        mapval="0",
        name="reboot",
        static="True",
        static_values="yes@no:0:Reboot",
        svalue="",
        mandatory='1',
        allow_multiple_values="0",
        order=4)
    boot = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Quiet Boot',
        api="",
        dt_type="string",
        label="Quiet Boot",
        mapval="0",
        name="boot",
        static="True",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="disabled",
        mandatory='1',
        order=5)
    cpu_perf = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='CPU Performance',
        dt_type="string",
        static="True",
        api="",
        name="cpu_perf",
        label="CPU Performance",
        static_values="enterprise:0:enterprise|high-throughput:0:high-throughput|hpc:0:hpc|custom:0:custom|platform-default:1:Platform Default",
        svalue="enterprise",
        mapval="",
        mandatory='1',
        order=6)
    core_multi = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Core Multi Processing',
        dt_type="string",
        static="True",
        api="",
        name="core_multi",
        label="Core Multi Processing",
        static_values="1:0:1|2:0:2|3:0:3|4:0:4|5:0:5|6:0:6|7:0:7|8:0:8|9:0:9|10:0:10|11:0:11|12:0:12|13:0:13|14:0:14|15:0:15|16:0:16|17:0:17|18:0:18|19:0:19|20:0:20|21:0:21|22:0:22|23:0:23|24:0:24|all:0:All|platform-default:0:Platform Default|platform-recommended:0:Platform-Recommended",
        svalue="all",
        mapval="",
        mandatory='1',
        order=7)
    dram_clock = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='DRAM Clock',
        dt_type="string",
        static="True",
        api="",
        name="dram_clock",
        label="DRAM Clock Throttling",
        static_values="auto:0:auto|balanced:0:balanced|performance:0:performance|energy-efficient:0:energy-efficient|platform-default:1:Platform Default",
        svalue="performance",
        mapval="",
        mandatory='1',
        order=7)
    direct_cache_access = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Direct cache access',
        dt_type="string",
        static="True",
        api="",
        name="direct_cache_access",
        label="Direct Cache Access",
        static_values="disabled:0:Disabled|enabled:0:Enabled|auto:0:auto|platform-default:0:Platform Default",
        svalue="enabled",
        mandatory='1',
        mapval="",
        order=8)
    intel_speedstep = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Intel SpeedStep',
        dt_type="string",
        static="True",
        api="",
        name="intel_speedstep",
        label="Intel SpeedStep Technology",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="disabled",
        mandatory='1',
        mapval="",
        order=9)
    hyper_threading = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Intel hyper threading',
        dt_type="string",
        static="True",
        api="",
        name="hyper_threading",
        label="Intel Hyper-Threading Technology",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="enabled",
        mandatory='1',
        mapval="",
        order=10)
    intel_turbo = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Intel turbo technology',
        dt_type="string",
        static="True",
        api="",
        name="intel_turbo",
        label="Intel Turbo Technology",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="enabled",
        mandatory='1',
        mapval="",
        order=11)
    intel_vt = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Intel Virtualization technology',
        dt_type="string",
        static="True",
        api="",
        name="intel_vt",
        label="Intel Virtualization Technology",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="enabled",
        mandatory='1',
        mapval="",
        order=12)
    channel_inter = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Channel Interleaving',
        dt_type="string",
        static="True",
        api="",
        name="channel_inter",
        label="Channel Interleaving",
        static_values="1-way:0:1 Way|2-way:0:2 Way|3-way:0:3 Way|4-way:0:4 Way|auto:0:Auto|platform-default:0:Platform-Default|platform-recommended:0:Platform-Recommended",
        svalue="auto",
        mandatory='1',
        mapval="",
        order=13)
    p_state = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='P STATE Coordination',
        dt_type="string",
        static="True",
        api="",
        name="p_state",
        label="P STATE Coordination",
        static_values="hw-all:0:HW ALL|platform-default:0:Platform-Default|platform-recommended:0:Platform-Recommended|sw-all:0:SW ALL|sw-any:0:SW ANY",
        svalue="hw-all",
        mandatory='1',
        mapval="",
        order=14)
    proc_c_state = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Processor C State',
        dt_type="string",
        static="True",
        api="",
        name="proc_c_state",
        label="Processor C State",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="disabled",
        mandatory='1',
        mapval="",
        order=15)
    proc_c1e = Radiobutton(
        hidden='False',
        isbasic='True',
        helptext='Processor C1E',
        dt_type="string",
        static="True",
        api="",
        name="proc_c1e",
        label="Processor C1E",
        static_values="disabled:0:Disabled|enabled:0:Enabled|platform-default:0:Platform Default",
        svalue="disabled",
        mandatory='1',
        mapval="",
        order=16)
    proc_c3_report = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Processor C3 Report',
        dt_type="string",
        static="True",
        api="",
        name="proc_c3_report",
        label="Processor C3 Report",
        static_values="disabled:0:disabled|enabled:0:enabled|acpi-c2:0:acpi-c2|acpi-c3:0:acpi-c3|platform-default:1:Platform Default",
        svalue="disabled",
        mapval="",
        mandatory='1',
        order=17)
    proc_c6_report = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Processor C6 report',
        dt_type="string",
        static="True",
        api="",
        name="proc_c6_report",
        label="Processor C6 Report",
        static_values="disabled:0:disabled|enabled:0:enabled|c7:0:c7|c7s:0:c7s|platform-default:1:Platform Default",
        svalue="disabled",
        mapval="",
        mandatory='1',
        order=18)
    proc_c7_report = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Processor C7 report',
        dt_type="string",
        static="True",
        api="",
        name="proc_c7_report",
        label="Processor C7 Report",
        static_values="disabled:0:disabled|enabled:0:enabled|c7:0:c7|c7s:0:c7s|platform-default:1:Platform Default",
        svalue="disabled",
        mapval="",
        mandatory='1',
        order=19)
    power_tech = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Power technology',
        dt_type="string",
        static="True",
        api="",
        name="power_tech",
        label="Power Technology",
        static_values="disabled:0:Disabled|energe-efficient:0:energy-efficient|performance:0:performance|custom:0:custom|platform-default:1:Platform Default",
        svalue="performance",
        mapval="",
        mandatory='1',
        order=20)
    energy_perf = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Energy performance',
        dt_type="string",
        static="True",
        api="",
        name="energy_perf",
        label="Energy Performance",
        static_values="performance:0:performance|balanced-performance:0:balanced-performance|balanced-energy:0:balanced-energy|energe-efficient:0:energy-efficient|platform-default:1:Platform Default",
        svalue="performance",
        mapval="",
        mandatory='1',
        order=21)
    adjacent_cache = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Adjacent Cache Line Prefetcher',
        dt_type="string",
        static="True",
        api="",
        name="adjacent_cache",
        label="Adjacent Cache Line Prefetcher",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=22)
    dcu_prefetcher = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='DCU IP Prefetcher',
        dt_type="string",
        static="True",
        api="",
        name="dcu_prefetcher",
        label="DCU IP Prefetcher",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=23)
    dcu_streamer = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='DCU Streamer Prefetch',
        dt_type="string",
        static="True",
        api="",
        name="dcu_streamer",
        label="DCU Streamer Prefetch",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=24)
    hardware_prefetcher = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Hardware Prefetche',
        dt_type="string",
        static="True",
        api="",
        name="hardware_prefetcher",
        label="Hardware Prefetche",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=25)
    KTIPrefetch = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='UPI Prefetch',
        dt_type="string",
        static="True",
        api="",
        name="KTIPrefetch",
        label="UPI Prefetch",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=26)
    LLCPrefetch = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='LLC Prefetch',
        dt_type="string",
        static="True",
        api="",
        name="LLCPrefetch",
        label="LLC Prefetch",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=26)
    XPTPrefetch = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='XPT Prefetch',
        dt_type="string",
        static="True",
        api="",
        name="XPTPrefetch",
        label="XPT Prefetch",
        static_values="auto:0:Auto|enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=27)
    demand_scrub = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Demand Scrub',
        dt_type="string",
        static="True",
        api="",
        name="demand_scrub",
        label="Demand Scrub",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=28)
    patrol_scrub = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Patrol Scrub',
        dt_type="string",
        static="True",
        api="",
        name="patrol_scrub",
        label="Patrol Scrub",
        static_values="enabled:0:Enabled|disabled:0:Disabled|platform-default:0:Platform-Default",
        svalue="enabled",
        mapval="",
        mandatory='1',
        order=29)
    dram_rate = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='DRAM Refresh Rate',
        dt_type="string",
        static="True",
        api="",
        name="dram_rate",
        label="DRAM Refresh Rate",
        static_values="1x:0:1X|2x:0:2X|3x:0:3X|4x:0:4X|auto:0:Auto|platform-default:0:Platform-Default|platform-recommended:0:Platform-Recommended",
        svalue="1x",
        mapval="",
        mandatory='1',
        order=30)
    memory_ras = Dropdown(
        hidden='False',
        isbasic='True',
        helptext='Memory RAS Configuration',
        dt_type="string",
        static="True",
        api="",
        name="memory_ras",
        label="Memory RAS Configuration",
        static_values="maximum-performance:0:maximum-performance|mirroring:0:mirroring|lockstep:0:lockstep|sparing:0:sparing|platform-default:1:Platform Default",
        svalue="maximum-performance",
        mapval="",
        mandatory='1',
        order=31)


class UCSCreateServerBIOSPolicyForAIMLHostsOutputs:
    status = Output(dt_type="integer", name="status", tvalue="SUCCESS")
